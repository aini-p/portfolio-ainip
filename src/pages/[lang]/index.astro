---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "~/layouts/BaseLayout.astro";

export function getStaticPaths() {
  return [{ params: { lang: "ja" } }, { params: { lang: "en" } }];
}
const { lang } = Astro.params;

const artworks = await getCollection("artworks", ({ id }) => id.startsWith(`${lang}/`));
artworks.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());
---

<BaseLayout>
  <section class="justified-gallery">
    {artworks.map((artwork, index) => (
      <a
        style={`--width: ${artwork.data.src.width}; --height: ${artwork.data.src.height};`}
        href={`/${lang}/gallery/${artwork.slug.replace(`${lang}/`, "")}`}
      >
        <Image
          format="webp"
          src={artwork.data.src}
          alt={artwork.data.title}
          height={400}
          loading={index < 20 ? "eager" : "lazy"}
        />
      </a>
    ))}
  </section>
</BaseLayout>

<style is:inline>
  .justified-gallery {
    --padding: max(2.5vw, 12px);
    --space: max(2.5vw, 12px);
    --min-height: clamp(200px, 20vw, 400px);

    padding: var(--padding);
    display: flex;
    flex-wrap: wrap;
    gap: var(--space);
  }
  .justified-gallery a {
    flex-grow: calc(var(--width) * (100000 / var(--height)));
    flex-basis: calc(var(--min-height) * (var(--width) / var(--height)));
    aspect-ratio: var(--width) / var(--height);
    overflow: hidden;
    opacity: 1;
    transition: all 0.05s ease-in-out;
  }
  .justified-gallery a img {
    display: block;
    object-fit: cover;
    height: 100%;
    width: 100%;
  }
  .justified-gallery a:focus-visible {
    outline: 3px solid var(--outline);
    outline-offset: 2px;
    transform: scale(1.05);
    z-index: 1;
    border-radius: 2px;
    box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.1);
  }
  .justified-gallery a.hidden {
    transition: opacity 0.4s ease-in-out;
    opacity: 0;
  }
  .justified-gallery::after {
    content: " ";
    flex-grow: 1000000000;
  }
</style>